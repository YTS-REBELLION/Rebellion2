FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2DArray g_arrtex_0;
  Texture2DArray g_arrtex_1;
  Texture2DArray g_arrtex_2;
  Texture2DArray g_arrtex_3;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  SamplerComparisonState g_sam_2
  {
  };
  SamplerState g_sam_3
  {
  };
  SamplerState g_sam_4
  {
  };
  
  Dungeon.cpp
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\MonsterScript.h(73,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\M_MonsterScript.h(97,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\ResMgr.h(137,1): warning C4267: '초기화 중': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\PlayerScript.h(108): message : 컴파일되는 함수 템플릿 인스턴스화 'Ptr<CTexture> CResMgr::Load<CTexture>(const std::wstring &,const std::wstring &)'에 대한 참조를 확인하세요.
  Network.cpp
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Animator3D.h(45,78): warning C4244: '=': 'const double'에서 '_Ty'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=float
          ]
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Animator3D.h(47,100): warning C4244: '=': 'const double'에서 '_Ty'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=float
          ]
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\MonsterScript.h(73,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\M_MonsterScript.h(97,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Boss.h(73,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Network.cpp(96,2): warning C4002: 함수 같은 매크로 호출 'RtlZeroMemory'에 대해 인수가 너무 많습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\ResMgr.h(137,1): warning C4267: '초기화 중': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Network.cpp(204): message : 컴파일되는 함수 템플릿 인스턴스화 'Ptr<CMeshData> CResMgr::Load<CMeshData>(const std::wstring &,const std::wstring &)'에 대한 참조를 확인하세요.
  PlayerScript.cpp
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Animator3D.h(45,78): warning C4244: '=': 'const double'에서 '_Ty'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=float
          ]
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Animator3D.h(47,100): warning C4244: '=': 'const double'에서 '_Ty'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=float
          ]
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\MonsterScript.h(73,38): warning C4244: '=': 'const int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Swing2.h(30,16): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Swing3.h(28,16): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Swing4.h(29,16): warning C4244: '초기화 중': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\ResMgr.h(137,1): warning C4267: '초기화 중': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\PlayerScript.h(108): message : 컴파일되는 함수 템플릿 인스턴스화 'Ptr<CTexture> CResMgr::Load<CTexture>(const std::wstring &,const std::wstring &)'에 대한 참조를 확인하세요.
  코드를 생성하고 있습니다...
C:\Users\pig75\OneDrive\Desktop\Rebellion\01. Project\Engine\Network.cpp(38): warning C4715: 'CheckType': 모든 제어 경로에서 값을 반환하지는 않습니다.
  Engine.vcxproj -> C:\Users\pig75\OneDrive\Desktop\Rebellion\03. External\Library\Engine\Engine.lib
